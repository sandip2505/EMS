<!DOCTYPE html>
<html lang="en">

<head>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/clockpicker/dist/jquery-clockpicker.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>
<%- include('partials/header.ejs') %>
  <style>
    .card {
      color: #fff;
    }

    .form-control:disabled {
      background-color: #2a3038;
    }

    .clockpicker-button {
      color: black;
    }
  </style>

  <body>
    <div class="container-scroller">
      <%- include('partials/sidebar.ejs') %>
        <div class="container-fluid page-body-wrapper">
          <%- include('partials/navbar.ejs') %>
            <div class="main-panel">
              <div class="content-wrapper">
                <section class="content">
                  <div class="card">
                    <div class="card-header">
                      <h1 class="card-title">Add Working Hour</h1>
                    </div>
                    <div class="card-body">
                      <form method="post" action="" id="addHour"><br>
                        <div class="row">
                          <div class="col-3">
                            <label for="Name"> Start Time: <span class="require">*</span></label>
                            <!-- <div class="input-group clockpicker" data-placement="top" data-align="top" data-autoclose="true"> -->
                            <input type="text" class="form-control" name="start_time" autocomplete="off"
                              onchange="checkHour()" id="start_time" value="">
                            <span class="text-danger" id="start_time_error"></span>
                            <!-- </div> -->
                          </div>
                          <div class="col-3 ">
                            <label for="Name">End Time: <span class="require">*</span></label>
                            <!-- <div class="input-group clockpicker" data-placement="top" data-align="top"
                              data-autoclose="true"> -->
                            <input type="text" autocomplete="off" class="form-control" name="end_time"
                              onchange="checkHour()" id="end_time" disabled value="">
                            <span class="text-danger" id="end_time_error"></span>
                            <!-- </div> -->
                          </div>
                          <div class="col-3">
                            <label for="date">Date<span class="require">*</span></label>
                            <input type="date" name="date" class="form-control" id="mydate">
                          </div>
                          <div class="col-3">
                            <label for="Name">Total TIme <span class="require">*</span></label>
                            <input type="text" name="total_hour" readonly id="total_hours" value=""
                              class="form-control">
                          </div>
                        </div>

                        <div class="col-12 mt-5">
                          <button type="submit" name="submit" id="submit" class="btn btn-primary">Submit</button>
                          <a class="btn btn-danger" href="/showWorkingHour">Back</a>
                        </div>
                      </form>
                    </div>
                  </div>
                </section>
              </div>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

              <script>


                const todayDate = new Date().toISOString().substr(0, 10);
                document.getElementById("mydate").value = todayDate;

                $("#start_time").change(function () {
                  var start_time = $("#start_time").val()
                  //  alert(start_time)
                  document.getElementById('end_time').removeAttribute("disabled");
                  //  document.getElementById('end_date').setAttribute('min', start_date);
                })
                $("#end_time").change(function () {
                  var start_time = $("#start_time").val();
                  var end_time = $("#end_time").val();

                  // Parse the start and end times with moment.js using the "h:mm A" format string
                  var start_moment = moment(start_time, 'h:mm A');
                  var end_moment = moment(end_time, 'h:mm A');

                  // Compare the times using moment.js's `isBefore()` method
                  if (end_time && end_moment.isBefore(start_moment)) {
                    $("#end_time_error").html("End time must be greater than start time");
                    $("#end_time").val("");
                  } else {
                    $("#end_time_error").html("");
                  }
                });

                $('input[name="start_time"]').clockpicker({
                  autoclose: true,
                  twelvehour: true,
                  afterDone: function () {
                    var start = $('input[name="start_time"]').val();
                    var end = $('input[name="end_time"]').val();

                    // convert start and end times from 12-hour to 24-hour format
                    var start24 = moment(start, 'h:mm A').format('HH:mm');
                    var end24 = moment(end, 'h:mm A').format('HH:mm');

                    var start_moment = moment(start24, 'HH:mm');
                    var end_moment = moment(end24, 'HH:mm');
                    var diff_moment = end_moment.diff(start_moment, 'minutes');
                    var diff_hours = Math.floor(diff_moment / 60);
                    var diff_minutes = diff_moment % 60;
                    var hours = ('0' + diff_hours).slice(-2)
                    var minutes = ('0' + diff_minutes).slice(-2)

                    $('input[name="start_time"]').val(start24)

                    if (start !== "" && end !== "") {
                      $('#total_hours').val(hours + ':' + minutes);
                    }
                  }
                });
                $('input[name="end_time"]').clockpicker({
                  autoclose: true,
                  twelvehour: true,
                  afterDone: function () {
                    var start = $('input[name="start_time"]').val();
                    var end = $('input[name="end_time"]').val();

                    // convert start and end times from 12-hour to 24-hour format
                    var start24 = moment(start, 'h:mm A').format('HH:mm');
                    var end24 = moment(end, 'h:mm A').format('HH:mm');

                    var start_moment = moment(start24, 'HH:mm');
                    var end_moment = moment(end24, 'HH:mm');
                    var diff_moment = end_moment.diff(start_moment, 'minutes');
                    var diff_hours = Math.floor(diff_moment / 60);
                    var diff_minutes = diff_moment % 60;
                    var hours = ('0' + diff_hours).slice(-2)
                    var minutes = ('0' + diff_minutes).slice(-2)

                    $('input[name="end_time"]').val(end24)

                    if (start !== "" && end !== "") {
                      $('#total_hours').val(hours + ':' + minutes);
                    }
                  }
                });
                var today = new Date().toISOString().split('T')[0];
                document.getElementById('mydate').setAttribute('min', today);
                document.getElementById('mydate').setAttribute('max', today);
              </script>
              <%- include('partials/footer.ejs') %>
  </body>

</html>
<script>


  $(document).ready(function ($) {
    $("#addHour").validate({
      rules: {
        start_time: {
          required: true,
        },
        end_time: {
          required: true,
        },
        date: {
          required: true,
        },
      },
      messages: {
        start_time: {
          required: "Start Time is reqired",
        },
        end_time: {
          required: "End Time is reqired",
        },
        date: {
          required: "Date is reqired",
        },
      },

    });
  });


//   function checkHour() {
//     var d = new Date();
//     var year = d.getFullYear();
//     var month = ('0' + (d.getMonth() + 1)).slice(-2);
//     var day = ('0' + d.getDate()).slice(-2);
//     var dateString = year + '-' + month + '-' + day;

//     var user_id = '<%=loggeduserdata._id%>'
//     var starttime = $('#start_time').val()
//     var endtime = $('#end_time').val()
//     var start24 = moment(starttime, 'h:mm A').format('HH:mm');
//     var end24 = moment(endtime, 'h:mm A').format('HH:mm');

//     console.log(start24)
//     $.ajax({
//       type: "POST",
//       url: "/api/checkHour/",
//       data: { 'date': dateString, 'user_id': user_id },
//       dataType: "json",
//       success: function (response) {
//   let isAvailable = true // initialize to true
//   for (let i = 0; i < response.workingHourData.length; i++) {
//     const start_time = new Date(response.workingHourData[i].start_time);
//     const end_time = new Date(response.workingHourData[i].end_time);
//     console.log(start24 >= start_time && start24 <= end_time)
//     if (start24 >= start_time && start24 <= end_time) {
//       isAvailable = false; // set to false when a match is found
//       break
//     }
//   }
//   if (!isAvailable) { // check for the negation
//     $("#start_time_error").html("Start Time Or End Time Already Exist");
//   } else {
//     $("#start_time_error").html("");
//   }
// }

//     })
//   }

</script>
<!-- custom-chart js -->

<!-- <script>
  if("<%=timeEntryRequestData%>"){
 const timeEntryRequestStartDate = "<%=JSON.stringify(timeEntryRequestData)%>"
 const decodedString = decodeURIComponent(timeEntryRequestStartDate.replace(/&#34;/g, '"'));
const decodedObject = JSON.parse(decodedString);
const errorMessage = document.getElementById("error-message");

myDate.addEventListener("input", function() {
  const selectedDate = new Date(myDate.value);
  let isDisabled = true;
  // const today = new Date();
  var today = new Date().toISOString().split('T')[0];
  var validays = '<%= validDays%>'
 var minDay = new Date(Date.now() - validays *86400000).toISOString().split('T')[0];
console.log("time",minDay,today,selectedDate.toISOString().split('T')[0])

  for (let i = 0; i < decodedObject.length; i++) {
    const startDate = new Date(decodedObject[i].start_date);
    const endDate = new Date(decodedObject[i].end_date);
    if ((selectedDate >= startDate && selectedDate <= endDate) || (selectedDate.toISOString().split('T')[0] >= minDay && selectedDate.toISOString().split('T')[0] <= today)) {
      isDisabled = false;
      break;
    }
  }
  if (isDisabled) {
    errorMessage.textContent = "This date is disabled.";
    myDate.value = "";
  } else {
    errorMessage.textContent = "";
  }
});

}else{

  var validays = '<%= validDays%>'
   var today = new Date().toISOString().split('T')[0];

  //  console.log(parseInt(validays)+1)
  
  //  .toISOString().split('T')[0];
   var minDay = new Date(Date.now() - validays *86400000)
if(minDay.getDay()==0){
  var minDay = new Date(Date.now() - (parseInt(validays)+1) *86400000 ).toISOString().split('T')[0]
  console.log("adas",minDay)
}else{
  console.log("ASda")
  var minDay = new Date(Date.now() - validays *86400000 ).toISOString().split('T')[0]
}
  document.getElementById('myDate').setAttribute('min', minDay);
  document.getElementById('myDate').setAttribute('max', today);
  }

  var api_url = "<%= process.env.BASE_URL %>";
  $(document).ready(function () {
    $("#project").on("change", function () {
      var selectedValue = this.value;
      $.ajax({
        type: "POST",
        url: api_url + "/getTaskByProject/" + selectedValue,
        data: { 'projectID': selectedValue },
        dataType: "json",
        success: function (response) {
          $("#task_id").html('<option value="" disabled selected> ' + "Select Task" + ' </option>');
          $.map(response.tasks, function (val, i) {
            // Do something
            $("#task_id").append('<option value="' + val._id + '"> ' + val.title + ' </option>');
          });
        }
      });
    });
  });




function disableSundays() {
  var input = document.getElementById("myDate");
  var day = new Date(input.value).getUTCDay();

  // If the selected day is Sunday (0), set the input value to null
  if (day == 0) {
    input.value = null;
    const errorMessage = document.getElementById("error-message");
    errorMessage.textContent = "You are Selecting Sunday.";
    input.style.border = "2px solid red";
  } else {
    const errorMessage = document.getElementById("error-message");
    errorMessage.textContent = "";
    input.style.border = "";
  }
}

var errorMessage = document.getElementById("error-message");
if("<%=holidayData%>" && "<%=userLeavesdata%>"){
 const holidayData = "<%=JSON.stringify(holidayData)%>";
 const decodedHolidayString = decodeURIComponent(holidayData.replace(/&#34;/g, '"'));
 const decodedHolidayObject = JSON.parse(decodedHolidayString);

 const userLeavesdata = "<%=JSON.stringify(userLeavesdata)%>";
 const decodedUserLeavesdataString = decodeURIComponent(userLeavesdata.replace(/&#34;/g, '"'));
 const decodedUserLeavesdataObject = JSON.parse(decodedUserLeavesdataString);

 const errorMessage = document.getElementById("error-message");

 myDate.addEventListener("input", function() {
   const selectedDate = new Date(myDate.value);
   let isHolidayDisabled = false;
   let isLeaveDisabled = false;

   for (let i = 0; i < decodedHolidayObject.length; i++) {
     const holidayDate = new Date(decodedHolidayObject[i].holiday_date);

     if (selectedDate.getTime() === holidayDate.getTime()) {
       isHolidayDisabled = true;
       break;
     }
   }

   for (let i = 0; i < decodedUserLeavesdataObject.length; i++) {
     const startDate = new Date(decodedUserLeavesdataObject[i].datefrom);
     const endDate = new Date(decodedUserLeavesdataObject[i].dateto);

     if ((selectedDate >= startDate && selectedDate <= endDate)) {
       isLeaveDisabled = true;
       break;
     }
   }

   if (isHolidayDisabled) {
     errorMessage.textContent = "You are selecting a holiday date.";
     myDate.value = "";
     myDate.style.border = "2px solid red";
   } else if (isLeaveDisabled) {
     errorMessage.textContent = "You are selecting a leave date.";
     myDate.value = "";
     myDate.style.border = "2px solid red";
   } else {
     errorMessage.textContent = "";
     myDate.style.border = "";
   }
 });
}
</script> -->